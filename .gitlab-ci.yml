variables:
  APP_HOST: 0.0.0.0
  APP_PORT: 8888
  FLASK_ENV: production
  FLASK_DEBUG: False
  IMAGE_TAG: lucaslemo/flask:1.0.0

stages:
  - build
  - image_scan
  - deploy

build_job:
   stage: build
   image: docker:latest
   script:
       - docker build --build-arg PORT=$APP_PORT -t $IMAGE_TAG -f ./docker/flask/Dockerfile .

security_scan:
  stage: image_scan
  image: docker:latest
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
  script:
    - trivy image --ignore-unfixed --severity HIGH,CRITICAL $IMAGE_TAG

deploy_job:
    stage: deploy
    image: docker:latest
    before_script:
        - touch .env
        - echo "FLASK_ENV=$FLASK_ENV" >> .env
        - echo "FLASK_DEBUG=$FLASK_DEBUG" >> .env
        - echo "SECRET_KEY=$SECRET_KEY" >> .env
        - echo "DATABASE_URL=$DATABASE_URL" >> .env
        - echo "APP_PORT=$APP_PORT" >> .env
        - echo "APP_HOST=$APP_HOST" >> .env
        - cat .env
        - docker compose down
        - PORT_CONTAINERS=$(docker ps --filter "publish=$APP_PORT" -q)
        - echo $PORT_CONTAINERS
        - if [ -n "$PORT_CONTAINERS" ]; then
            docker stop $PORT_CONTAINERS;
            docker rm $PORT_CONTAINERS;
            sleep 5; 
          fi
    script:
        - docker compose up -d